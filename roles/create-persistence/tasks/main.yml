---
# Persistence volumes creation
- name: Create a PV
  k8s:
    state: present    
    definition:      
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: local-storage
        namespace: "{{ namespace }}"        
      provisioner: kubernetes.io/no-provisioner
      volumeBindingMode: WaitForFirstConsumer

- name: Create a PV_WORKER1
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: pv001
        namespace: "{{ namespace }}"        
        labels:
          type: local
      spec:
        capacity:
          storage: 50Gi
        accessModes:
          - ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        storageClassName: local-storage
        local:
          path: /mnt/data
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ gcp_node_worker_1 }}"

- name: Create a PV_WORKER2
  k8s:
    state: present    
    definition:      
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: pv002
        namespace: "{{ namespace }}"        
        labels:
          type: local
      spec:
        capacity:
          storage: 50Gi
        accessModes:
          - ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        storageClassName: local-storage
        local:
          path: /mnt/data
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ gcp_node_worker_2 }}"

- name: Create a MySQL PV Claim
  k8s:
    state: present    
    definition:      
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mysql-pv-claim
        namespace: "{{ namespace }}"        
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-storage
        resources:
          requests:
            storage: 20Gi

- name: Create a SQLITE3 PV Claim
  k8s:
    state: present
    definition:      
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: sqlite3-pv-claim
        namespace: "{{ namespace }}"        
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-storage
        resources:
          requests:
            storage: 20Gi